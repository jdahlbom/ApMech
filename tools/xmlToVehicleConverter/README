This tool set exists to generate vehicle type description xml files (mech.xsd schema currrently),
using skeleton files (name.skel.xml) generated by BLENDER -> OGRE importer.

Only thing that is really used from the skeleton file is bone names.
Following naming conventions will be used:
* B_SLOT_ -prefix is used for external equipment slots. 
           Rest of the name should indicate the location of that slot.
* B_ROTATE_ -prefix is used to indicate that this is a bone intended for limited
             rotation: For mechs and tanks the most common ROTATE bone will be the torso/turret bone
             which *should* always point directly upwards.


How this tool was created?
* First we took the ogremesh.dtd and ogreskeleton.dtd that are part of Ogre sources.
* Use dtd2xsd to convert those to schema files.
* Test and fix iteratively with xmllint until schema files validate.
  * dtd2xsd is OLD, and generates 2000/10/XMLSchema files.
  * Change the schema namespace to http://www.w3.org/2001/XMLSchema
  * Fix all the errors found in validation. " use='default' value='1' " --> " default='1' "
* Create a test mesh with Blender and import it to mesh + skel files.
* Validate the mesh + skel files to verify that schema is correct.
  ( My experiment required adding the correct namespace to mesh + skel files )
* Run gsoap wsdl2h + soapcpp2 to generate the data binding classes.
* Use those generated classes + stdsoap2.cpp to read the skel data.
* Run gsoap against vehicle.xsd / mech.xsd to generate data binding classes for them.
* Use the data read from skel files to create a default structure for a mech implementation,
  saving SLOT and ROTATE bone information in generated_mech.xml.
* ...
* Rename and edit in proper tool. Profit!
